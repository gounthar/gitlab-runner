stages:
  - register
  - images
  - unregister
  - multi-arch

.image:
  image: docker:stable
  stage: images
  services:
    - docker:stable-dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - export RUNNER_ARCH=$(echo $CI_JOB_NAME|sed 's,.*:,,g')
    - export RUN_AS_PLATFORM="${RUNNER_ARCH}"
    - apk add --no-cache make bash
  script:
    - make all
  tags:
    - docker
    - arm64

.runner:
  image:
    name: hashicorp/terraform:0.14.7
    entrypoint: [""]
  before_script:
    - export RUNNER_ARCH=$(echo $CI_JOB_NAME|sed 's,.*:,,g')
    - export TASK=$(echo $CI_JOB_NAME|sed 's,:.*$,,g')
    - cd ci/aws/$RUNNER_ARCH
    - terraform init
  script:
    - terraform $TASK -auto-approve

apply:arm:
  extends: .runner
  stage: register

test:arm:
  extends: .image
  script:
    - make build
  except:
    - master
  needs:
    - apply:arm

img:arm:
  extends: .image
  only:
    - master
  environment:
    name: arm/docker_images
    url: https://hub.docker.com/r/klud/gitlab-runner/tags/
  needs:
    - apply:arm

destroy:arm:
  extends: .runner
  stage: unregister
  when: always

apply:arm64:
  extends: .runner
  stage: register

test:arm64:
  extends: .image
  script:
    - make build
  except:
    - master
  needs:
    - apply:arm64

img:arm64:
  extends: .image
  only:
    - master
  environment:
    name: arm/docker_images
    url: https://hub.docker.com/r/klud/gitlab-runner/tags/
  needs:
    - apply:arm64

destroy:arm64:
  extends: .runner
  stage: unregister
  when: always

arch-tag:
  stage: multi-arch
  image: ulm0/manifest-tool:1.0.0
  script:
    - make multi-arch
  only:
    - master
  needs:
    - img:arm
    - img:arm64
